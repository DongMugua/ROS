// Copyright 2012-2016 CNRS-UM LIRMM, CNRS-AIST JRL
//
// This file is part of SpaceVecAlg.
//
// SpaceVecAlg is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// SpaceVecAlg is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with SpaceVecAlg.  If not, see <http://www.gnu.org/licenses/>.

#pragma once

// std
#include <limits>
#include <ostream>

// eigen
#include <Eigen/Core>
#include <Eigen/Geometry>

// utility
#include "EigenTypedef.h"
#include "EigenUtility.h"
#include "MathFunc.h"

// forward declaration
namespace sva
{
	template<typename T> class MotionVec;
	template<typename T> class ForceVec;
	template<typename T> class RBInertia;
	template<typename T> class ABInertia;
	template<typename T> class PTransform;
}

#include "MotionVec.h"
#include "ForceVec.h"
#include "RBInertia.h"
#include "ABInertia.h"
#include "PTransform.h"
#include "Operators.h"

// typedef
namespace sva
{
	typedef MotionVec<double> MotionVecd;
	typedef ForceVec<double> ForceVecd;
	typedef RBInertia<double> RBInertiad;
	typedef ABInertia<double> ABInertiad;
	typedef PTransform<double> PTransformd;
}
